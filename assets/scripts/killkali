#!/system/bin/sh

SCRIPT_PATH=$(readlink -f $0)
. ${SCRIPT_PATH%/*}/bootkali_log

if [ -x /system/xbin/busybox_nh ]; then
	busybox=/system/xbin/busybox_nh
elif [ -x /system/xbin/busybox ]; then
	busybox=/system/xbin/busybox
elif [ -x /system/bin/busybox ]; then
	busybox=/system/bin/busybox
elif [ -x /data/adb/magisk/busybox ]; then
	busybox=/data/adb/magisk/busybox
else
	bklog "Busybox not found!  Install it, dummy!"
	exit
fi

export bin=/system/bin
export mnt=/data/local/nhsystem/kali-armhf
PRESERVED_PATH=$PATH
export PATH=/usr/bin:/usr/sbin:/bin:/usr/local/bin:/usr/local/sbin:$PATH
export TERM=linux
export HOME=/root
export LOGNAME=root
export chroot_image=/sdcard/kali-chroot.img
unset LD_PRELOAD

kill_pids() {
    local lsof_full=$(lsof | awk '{print $1}' | grep -c '^lsof')
    if [ "${lsof_full}" -eq 0 ]; then
        local pids=$(lsof | grep "$mnt" | awk '{print $1}' | uniq)
    else
        local pids=$(lsof | grep "$mnt" | awk '{print $2}' | uniq)
    fi
    if [ -n "${pids}" ]; then
        kill -9 ${pids} 2> /dev/null
        return $?
    fi
    return 0
}

########## Shutdown kali service ##########
## set shmmax to 128mb to free memory ##

$busybox sysctl -w kernel.shmmax=134217728
$busybox chmod 666 /dev/null

bklog "[!] Shutting down dbus"
$busybox chroot $mnt /etc/init.d/dbus stop

bklog "Shutting down SSH Server"
$busybox chroot $mnt /etc/init.d/ssh stop > /dev/null 2>&1

bklog "[!] Shutting down Postgresql"
$busybox chroot $mnt /etc/init.d/postgresql stop > /dev/null 2>&1

bklog "[!] Shutting down VNCserver"
pkill Xtightvnc
rm -f $mnt/root/.vnc/*.log *.pid > /dev/null 2>&1
rm -f $mnt/tmp/.X*-.lock .X*-unix/* > /dev/null 2>&1

########## Kill all running kali terminals first ##########
echo " [!] Killing all running kali terminals.."
kill_pids

if [ -d "$mnt/dev/shm" ]; then
    $busybox umount $mnt/dev/shm 2> /dev/null && echo "umounted shm"
fi

if [ -d "$mnt/dev/pts" ]; then
    $busybox umount $mnt/dev/pts 2> /dev/null && echo "umounted pts"
fi

if [ -d "$mnt/dev" ]; then
    $busybox umount $mnt/dev 2> /dev/null && echo "umounted dev"
fi

if [ -d "$mnt/proc" ]; then
    $busybox umount $mnt/proc 2> /dev/null && echo "umounted proc"
fi

if [ -d "$mnt/sys" ]; then
    $busybox umount $mnt/sys 2> /dev/null && echo "umounted sys"
fi

if [ -d "$mnt/sdcard" ]; then
    $busybox umount $mnt/sdcard 2> /dev/null && echo "umounted sdcard"
    rmdir $mnt/sdcard
fi

if [ -d "$mnt/external_sd" ]; then
    $busybox umount $mnt/external_sd 2> /dev/null && echo "umounted external_sd"
    rmdir $mnt/external_sd
fi

if [ -d "$mnt/mnt/usbdisk" ]; then
    $busybox umount $mnt/mnt/usbdisk 2> /dev/null && echo "umounted /mnt/usbdisk"
    rmdir $mnt/mnt/usbdisk
fi

###### umount the chroot as well if it is being mounted. Here the directory method will not be affected. ######
if [ "$(losetup -a | grep $chroot_image)" ]; then
    if [ "$($busybox umount $mnt 2>&1 > /dev/null)" ]; then
        bklog "[-] Unable to umount the kali chroot image."
        bklog "[!] If so, please try to close all the kali terminals first, secondly manually umount all the mointpoints on kali chroot, and lastly kill all the running services like ssh, vnc, webservice etc..."
    else
	bklog "[+] umounted kali-armhf"
    fi
fi

if [ -d "$mnt/mnt" ]; then
    $busybox umount $mnt/mnt 2> /dev/null && echo "umounted /mnt/usbdisk"
    rmdir $mnt/mnt
fi

###### umount the chroot as well if it is being mounted. Here the directory method will not be affected. ######
if [ "$(losetup -a | grep $chroot_image)" ]; then
    if [ "$($busybox umount $mnt 2>&1 > /dev/null)" ]; then
        echo " [-] Unable to umount the kali chroot image."
        echo " [!] If so, please try to close all the kali terminals first, secondly manually umount all the mointpoints on kali chroot, and lastly kill all the running services like ssh, vnc, webservice etc..."
    else
        echo "umounted kali-armhf"
    fi
fi

# Run e2fsck everytime we umount the kali chroot image on enrypted device.
if [ -f "$chroot_image" ]; then
    echo " [!] Running e2fsck to check image $chroot_image.."
    e2fsck -y $chroot_image
fi

# Check again if chroot image is really umounted.
if [ "$(losetup -a | grep $chroot_image)" ]; then
    echo " [!] $mnt is still being mounted. Something is wrong!" && read
fi

# Check again if chroot image is really umounted.
if [ "$(losetup -a | grep $chroot_image)" ]; then
    bklog "[!] $mnt is still being mounted. Something is wrong!" && read
fi

if [ -d "$mnt/system" ]; then
    rmdir $mnt/system
fi

if [ -d "$mnt/sdcard" ]; then
    rmdir $mnt/sdcard
fi

if [ -d "$mnt/external_sd" ]; then
    rmdir $mnt/external_sd
fi

if [ $($busybox umount $mnt 2>&1 > /dev/null) ]; then
    echo " [-] Unable to umount the kali chroot image."
    echo " [-] Please close all the kali terminals and umount all the mointpoint on kali chroot first then try again."
else
    echo "unmounted kali-armhf"
fi

# Run e2fsck everytime it umount the kali chroot image.
e2fsck -y /sdcard/kali-chroot.img

export PATH=$PRESERVED_PATH
